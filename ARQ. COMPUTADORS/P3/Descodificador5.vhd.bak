library ieee;

use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;

	

entity Descodificador is
	Port ( Habilitacio: in STD_LOGIC;
		Ent : in STD_LOGIC_VECTOR (4 downto 0);
		Sort : out STD_LOGIC_VECTOR (31 downto 0)
		);
end Descodificador;

architecture desc of Descodificador is 

begin
	process (Habilitacio,Ent) then 
		case Ent 
		if (Habilitacio='1') then
			when x"00" => Sort <= "00000000000000000000000000000001";
			when x"01" => Sort <= "00000000000000000000000000000010";
			when x"02" => Sort <= "00000000000000000000000000000100";
			when x"03" => Sort <= "00000000000000000000000000001000";
			when x"04" => Sort <= "00000000000000000000000000010000";
			when x"05" => Sort <= "00000000000000000000000000100000";
			when x"06" => Sort <= "00000000000000000000000001000000";
			when x"07" => Sort <= "00000000000000000000000010000000";
			when x"08" => Sort <= "00000000000000000000000100000000";
			when x"09" => Sort <= "00000000000000000000001000000000";
			when x"0A" => Sort <= "00000000000000000000010000000000";
			when x"0B" => Sort <= "00000000000000000000100000000000";
			when x"0C" => Sort <= "00000000000000000001000000000000";
			when x"0D" => Sort <= "00000000000000000010000000000000";
			when x"0E" => Sort <= "00000000000000000100000000000000";
			when x"0F" => Sort <= "00000000000000001000000000000000";
			when x"10" => Sort <= "00000000000000010000000000000000";
			when x"11" => Sort <= "00000000000000100000000000000000";
			when x"12" => Sort <= "00000000000001000000000000000000";
			when x"13" => Sort <= "00000000000010000000000000000000";
			when x"14" => Sort <= "00000000000100000000000000000000";
			when x"15" => Sort <= "00000000001000000000000000000000";
			when x"16" => Sort <= "00000000010000000000000000000000";
			when x"17" => Sort <= "00000000100000000000000000000000";
			when x"18" => Sort <= "00000001000000000000000000000000";
			when x"19" => Sort <= "00000010000000000000000000000000";
			when x"1A" => Sort <= "00000100000000000000000000000000";
			when x"1B" => Sort <= "00001000000000000000000000000000";
			when x"1C" => Sort <= "00010000000000000000000000000000";
			when x"1D" => Sort <= "00100000000000000000000000000000";
			when x"1E" => Sort <= "01000000000000000000000000000000";
			when x"1F" => Sort <= "10000000000000000000000000000000";
			when others => Sort <= "--------------------------------";
		end case;

	elsif (Habilitacio='0') then 
		Sort <= x"00000000";
	end process;
end desc;